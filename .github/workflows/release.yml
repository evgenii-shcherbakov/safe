name: 'Release'

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'

env:
  BASE_HREF: '${{ github.event.repository.name }}'

  KEYSTORE_GIT_REPOSITORY: '${{ secrets.KEYSTORE_GIT_REPOSITORY }}'
  KEYSTORE_ACCESS_TOKEN: '${{ secrets.KEYSTORE_ACCESS_TOKEN }}'

  ANDROID_RELEASE_SIGN_KEY_KEYSTORE_PASSWORD: '${{ secrets.ANDROID_RELEASE_SIGN_KEY_KEYSTORE_PASSWORD }}'
  ANDROID_RELEASE_SIGN_KEY_ALIAS: '${{ secrets.ANDROID_RELEASE_SIGN_KEY_ALIAS }}'
  ANDROID_RELEASE_SIGN_KEY_PASSWORD: '${{ secrets.ANDROID_RELEASE_SIGN_KEY_PASSWORD }}'

  GOOGLE_BUCKET_NAME: '${{ secrets.GOOGLE_BUCKET_NAME }}'
  GOOGLE_PRIVATE_KEY_PASSWORD: '${{ secrets.GOOGLE_PRIVATE_KEY_PASSWORD }}'
  GOOGLE_SERVICE_ACCOUNT: '${{ secrets.GOOGLE_SERVICE_ACCOUNT }}'
  GOOGLE_BUILD_NUMBER_FILE: '${{ secrets.GOOGLE_BUILD_NUMBER_FILE }}'
  
  PRIVATE_DATA_PASSWORD: '${{ secrets.PRIVATE_DATA_PASSWORD }}'

jobs:
  Prebuild:
    runs-on: 'ubuntu-latest'

    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'subosito/flutter-action@v2'
        with:
          channel: 'stable'
      - name: 'Declare environment variables'
        run: |
          chmod +x scripts/helpers/declare_env_variables.sh
          scripts/helpers/declare_env_variables.sh
      - name: 'Checkout keystore repo'
        uses: 'actions/checkout@v3'
        with:
          repository: '${{ env.KEYSTORE_GIT_REPOSITORY }}'
          token: '${{ env.KEYSTORE_ACCESS_TOKEN }}'
          path: '${{ env.KEYSTORE_FOLDER }}'
      - name: 'Get google OAuth token'
        run: |
          chmod +x scripts/google/generate_google_oauth_token.sh
          scripts/google/generate_google_oauth_token.sh
      - name: 'Prebuild'
        run: |
          chmod +x scripts/flutter/prebuild.sh
          scripts/flutter/prebuild.sh
      - name: 'Increment build number'
        run: |
          chmod +x scripts/google/inc_build_number.sh
          scripts/google/inc_build_number.sh
      - name: 'Get git tag'
        uses: 'olegtarasov/get-tag@v2.1'
      - name: 'Generate release data'
        run: |
          chmod +x scripts/github/generate_release_data.sh
          scripts/github/generate_release_data.sh
      - name: 'Clean dist folder'
        run: |
          chmod +x scripts/helpers/clean_dist_directory.sh
          scripts/helpers/clean_dist_directory.sh
      - name: 'Eject shared data'
        run: |
          chmod +x scripts/github/eject_shared_data.sh
          scripts/github/eject_shared_data.sh
      - name: 'Upload shared data'
        uses: 'actions/upload-artifact@v3'
        with:
          name: 'Shared data'
          path: '${{ env.DIST_FOLDER }}/shared-data.zip'
          retention-days: 1

  Web:
    runs-on: 'ubuntu-latest'
    needs:
      - 'Prebuild'

    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'subosito/flutter-action@v2'
        with:
          channel: 'stable'
      - name: 'Load shared data'
        uses: 'actions/download-artifact@v3'
        with:
          name: 'Shared data'
      - name: 'Declare environment variables'
        run: |
          chmod +x scripts/helpers/declare_env_variables.sh
          scripts/helpers/declare_env_variables.sh
      - name: 'Inject shared data'
        run: |
          chmod +x scripts/github/inject_shared_data.sh
          scripts/github/inject_shared_data.sh
      - name: 'Get build arguments'
        run: |
          chmod +x scripts/google/get_build_arguments.sh
          scripts/google/get_build_arguments.sh web
      - name: 'Clean dist folder'
        run: |
          chmod +x scripts/helpers/clean_dist_directory.sh
          scripts/helpers/clean_dist_directory.sh
      - name: 'Build web version'
        run: |
          chmod +x scripts/web/build.sh
          scripts/web/build.sh
      - name: 'Deploy web version'
        uses: 'JamesIves/github-pages-deploy-action@v4'
        with:
          folder: '${{ env.DIST_FOLDER }}/web'

  Android:
    runs-on: 'ubuntu-latest'
    needs:
      - 'Prebuild'

    steps:
      - uses: 'actions/checkout@v3'
      - uses: 'subosito/flutter-action@v2'
        with:
          channel: 'stable'
      - uses: 'actions/setup-java@v2'
        with:
          distribution: 'zulu'
          java-version: 18
      - name: 'Declare environment variables'
        run: |
          chmod +x scripts/helpers/declare_env_variables.sh
          scripts/helpers/declare_env_variables.sh
      - name: 'Load shared data'
        uses: 'actions/download-artifact@v3'
        with:
          name: 'Shared data'
      - name: 'Inject shared data'
        run: |
          chmod +x scripts/github/inject_shared_data.sh
          scripts/github/inject_shared_data.sh
      - name: 'Get build arguments'
        run: |
          chmod +x scripts/google/get_build_arguments.sh
          scripts/google/get_build_arguments.sh android
      - name: 'Prebuild android version'
        run: |
          chmod +x scripts/android/prebuild.sh
          scripts/android/prebuild.sh
      - name: 'Clean dist folder'
        run: |
          chmod +x scripts/helpers/clean_dist_directory.sh
          scripts/helpers/clean_dist_directory.sh
      - name: 'Build android version'
        run: |
          chmod +x scripts/android/build.sh
          scripts/android/build.sh
      - name: 'Upload android bundle'
        uses: 'actions/upload-artifact@v3'
        with:
          name: 'Android'
          path: '${{ env.DIST_FOLDER }}/android'
          retention-days: 1

  Release:
    runs-on: 'ubuntu-latest'
    needs:
      - 'Web'
      - 'Android'

    steps:
      - uses: 'actions/checkout@v3'
      - name: 'Load shared data'
        uses: 'actions/download-artifact@v3'
        with:
          name: 'Shared data'
      - name: 'Declare environment variables'
        run: |
          chmod +x scripts/helpers/declare_env_variables.sh
          scripts/helpers/declare_env_variables.sh
      - name: 'Inject shared data'
        run: |
          chmod +x scripts/github/inject_shared_data.sh
          scripts/github/inject_shared_data.sh
      - name: 'Load Android bundle'
        uses: 'actions/download-artifact@v3'
        with:
          name: 'Android'
          path: '${{ env.DIST_FOLDER }}'
      - name: 'Create release'
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: '${{ env.RELEASE_TAG }}'
          prerelease: false
          files: '${{ env.DIST_FOLDER }}/**/*'
