name: Release

on:
  push:
    branches:
      - main
    tags:
      - '*'

env:
  APP_NAME: 'safe'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  Web:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Setup AWS
        uses: 'aws-actions/configure-aws-credentials@v1'
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Get build arguments from AWS
        uses: 'marvinpinto/action-inject-ssm-secrets@latest'
        with:
          ssm_parameter: '/safe/build-args/web'
          env_variable_name: 'WEB_BUILD_ARGUMENTS'
      - name: Build frontend web version
        run: |
          chmod +x ./scripts/build_web.sh
          ./scripts/build_web.sh ${{ github.event.repository.name }}
      - name: Deploy frontend web version
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: dist

  Android:
    runs-on: ubuntu-latest

    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      RELEASE_SIGN_KEY_ALIAS: ${{ secrets.RELEASE_SIGN_KEY_ALIAS }}
      RELEASE_SIGN_KEY_PASSWORD: ${{ secrets.RELEASE_SIGN_KEY_PASSWORD }}

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 18
      - name: Checkout keystore repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.KEYSTORE_GIT_REPOSITORY }}
          token: ${{ secrets.KEYSTORE_ACCESS_TOKEN }}
          path: frontend/android/app/keystore
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Setup AWS
        uses: 'aws-actions/configure-aws-credentials@v1'
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Get build arguments from AWS
        uses: 'marvinpinto/action-inject-ssm-secrets@latest'
        with:
          ssm_parameter: '/safe/build-args/android'
          env_variable_name: 'ANDROID_BUILD_ARGUMENTS'
      - name: Build android version
        run: |
          chmod +x ./scripts/build_android.sh
          ./scripts/build_android.sh $APP_NAME-$GIT_TAG_NAME
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Android
          path: dist/*
          retention-days: 1

  Release:
    runs-on: ubuntu-latest
    needs:
      - Web
      - Android

    steps:
      - name: Get git tag
        uses: olegtarasov/get-tag@v2.1
      - name: Check tag
        if: ${{ env.GIT_TAG_NAME == '' }}
        run: echo "GIT_TAG_NAME=latest" >> $GITHUB_ENV
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Create release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.GIT_TAG_NAME }}
          prerelease: false
          files: '**/*'